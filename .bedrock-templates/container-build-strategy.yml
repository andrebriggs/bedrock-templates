parameters:
- name: buildArgs
  type: object
  default: []
- name: downloadTools
  type: boolean
  default: true
- name: imageName
  type: string
- name: imageTag
  type: string
- name: imageRepoType
  type: string
  default: ACR
- name: enableIntrospetion
  type: boolean
  default: true
  
steps:
- ${{ if eq(parameters.downloadTools, true) }}:
  - task: HelmInstaller@1
    inputs:
      helmVersionToInstall: 2.16.3
- script: |-
    echo imageName: ${{ parameters.imageName }}
    echo imageTag: ${{ parameters.imageTag }}
    echo BuildArgs: "${{join(';',parameters.buildArgs.*)}}"
    echo $(System.DefaultWorkingDirectory)
    cd $(System.DefaultWorkingDirectory)
    ls -la
    sudo chmod +x ./$(TEMPLATE_DIR)/scripts/*.sh
  failOnStderr: true
  displayName: Debugging messages
- task: Bash@3
  inputs:
    ${{ if eq(parameters.imageRepoType, 'ACR') }}:
      filePath: $(TEMPLATE_DIR)/scripts/AzureContainerRegistryBuild.sh
    ${{ if eq(parameters.imageRepoType, 'DockerHub') }}:
      filePath: $(TEMPLATE_DIR)/scripts/DockerHubRegistryBuild.sh
    failOnStderr: true
  env:
    IMAGE_TAG: ${{ parameters.imageTag }}
    BUILD_REPO_NAME: ${{ parameters.imageName }}
    BUILD_ARG_DELIMITED: ${{join(';',parameters.buildArgs.*)}}
    # Instead of evaluating ${{join(';',parameters.buildArgs.*)}} multiple times use a variable
    ${{ each item in parameters.buildArgs.* }}: # We want the bash script to have access to the var values
      ${{ item }}: ${{ format('${0}', item) }}
  displayName: Execute Docker Image Build
